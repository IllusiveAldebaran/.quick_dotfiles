
# #!TODO: Get stuff from git

source $HOME/.config/.bash_functions # and custom autocompletes
source $HOME/.config/.bash_aliases # aliases 
source $HOME/.config/.bash_completions # nice completions 
source $HOME/.config/.bash_bindings # bindings 

export EDITOR="/bin/nvim"

export HISTSIZE=2000000
HISTIGNORE=" *:&:ls:exit:pwd:clear"

# customizing the prompts
#PS1='\[\e[0;37;48;2;0;77;77m\][\[\u\[\e[2;32;48;2;0;77;77m\] \[\e[0;37;48;2;0;77;77m\]\h \W]\[\e[0;37m\]\$ ' 
#PS1='\[\e[0;37;48;2;0;77;77m\][\[\u\[\e[2;32;48;2;0;77;77m\] \[\e[0;37;48;2;0;77;77m\]\h \W]\[\e[0;37m\]\$ ' 
D_LOGO=''
case $(awk -F= '{if ($1 == "NAME"){gsub(/"/, "", $2); print $2}}' /etc/os-release) in
  "Arch Linux")
    D_LOGO='\[\e[0;96m\]󰣇\[\e[0m\]'
    ;;
  "Void")
    D_LOGO="\[\e[38;5;208m\] \[\e[0m\]"
    ;;
  "CentOS Linux")
    D_LOGO="\[\e[0;35m\] \[\e[0m\]"
    ;;
  "Linux Mint")
    D_LOGO="\[\e[0;46m\] \[\e[0m\]"
    ;;
  "Ubuntu")
    D_LOGO="\[\e[0;208m\] \[\e[0m\]"
    ;;
  "Debian GNU/Linux")
    D_LOGO="\[\e[0;52m\]\[\e[0m\]"
    ;;
  "Rocky Linux")
    D_LOGO="\[\e[0;32m\] \[\e[0m\]"
    ;;
  "Pop!_OS")
    D_LOGO="\[\e[38;2;30;144;255m \[\e[0m\]"
    ;;
  *)
    D_LOGO=''
    ;;
esac
PS1="[\u${D_LOGO}\h \W]\$ "

SUDO_PROMPT=$'\a[sudo] password: '

# allows to search forward with <C-s>
stty -ixon

# added by cargo once, changed because of Void Linux having a cargo package
#if [[ -d "$HOME/.cargo/env" ]]; then
#  . "$HOME/.cargo/env" 
#fi
# bash

######
#	The following used to manage XDG_RUNTIME_DIR and some DBUS_SESSION_BUS_ADDRESS
#	But now I've enabled turnstile(d) and it manages this.
#####
#export XDG_RUNTIME_DIR=/tmp/xdg-runtime-$(id -u)
#if [[ ! -d $XDG_RUNTIME_DIR ]]; then
#  mkdir -p $XDG_RUNTIME_DIR
#fi
# Handle Audio
#export $(dbus-launch) # this is supposed to run once but if uncommented runs too uch

# start mpd (This is a decent way to launch recommended not just form one place btw)
#[ ! -s ~/.config/mpd/pid ] && mpd

# add local Rust path. Might be only path as far as I know.
export PATH="$PATH:${HOME}/.cargo/bin/" # oh this one already added?
# add Ruby paths. Second is empty but whatever
#export PATH="$PATH:/usr/lib/ruby/gems/3.1.0/bin/:$PWD/.local/share/gem/ruby/3.1.0"
PATH="$PATH:$HOME/.local/bin"
PATH="$PATH:$HOME/All_Code_Folder/IntelFPGA_lite/quartus/bin"
# Ruby Gems
PATH="$PATH:/usr/lib/ruby/gems/3.2.0/bin"
#Personal scripts
PATH="$PATH:$HOME/.config/script-collection"

if [[ ! -d ~/.config/script-collection ]]; then
  mkdir ~/.config/script-collection
fi

# check if it already has scripts inside. Check if it is not empty.
if ! ls ~/.config/script-collection/* &> /dev/null ; then
  if [[ -d ~/All_Code_Folder ]] && [[ -d ~/All_Code_Folder/bash_scripts ]]; then
    seq=$(find ~/All_Code_Folder/bash_scripts/ -mindepth 2 -maxdepth 3 -executable)

    for i in $seq; do
      ln -s $i ~/.config/script-collection/
    done


    # make functions for the sake of dmenu
    # These are in ~/.config/.bash_functions

    input_file="$HOME/.config/.bash_functions"

    # Check if the input file exists
    if [ ! -f "$input_file" ]; then
      echo "Error: Input file '$input_file' not found."
      return 1
    fi
    # Extract function names and contents
    functions=$(awk '/^function / {print $2}' "$input_file" | cut -f 1 -d "(" )

    # Create a script file for each function
    while IFS= read -r function_name; do
      script_name="$function_name.sh"
      printf "#!/bin/bash\n" > ~/.config/script-collection/$script_name

      awk -v f_name="function $function_name" 'found && /^}/ {exit}; found {print}; $0 ~ f_name {found=1;}' $input_file >> ~/.config/script-collection/$script_name


    done <<< "$functions"

    chmod +x ~/.config/script-collection/*
  fi
fi

MANPAGER='nvim +Man!'
#export MANPAGER="less -R --use-color -Dd+r -Du+b"
#MANPAGER="sh -c 'col -bx | bat -l man -p'" # bat


# devkitpro variables
DEVKITPRO=/opt/devkitpro
DEVKITARM=/opt/devkitpro/devkitARM
DEVKITPPC=/opt/devkitpro/devkitPPC


